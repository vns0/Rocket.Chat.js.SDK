{"version":3,"file":"message.js","sourceRoot":"","sources":["../../src/lib/message.ts"],"names":[],"mappings":";;AAOA;;;;;GAKG;AACH;IAQE,YACE,OAA0B,EAC1B,aAAqB,EACrB,OAAqB,EAAE;QAVzB,4DAA4D;QAC5D,6CAA6C;QAC7C,QAAG,GAAkB,IAAI,CAAA;QAUvB,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAA;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,0CAA0C;YAC1C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;QAC9B,CAAC;QAED,iEAAiE;QACjE,6BAA6B;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,aAAa,EAAE,CAAA;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAA;QACjB,CAAC;IACH,CAAC;IAED,SAAS,CAAE,MAAc;QACvB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAA;QACjB,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;CACF;AAjCD,0BAiCC","sourcesContent":["// message.ts\r\nimport { IMessage, IMessageOpts } from '../config/messageInterfaces'\r\n\r\n// Message class declaration implicitly implements interface\r\n// https://github.com/Microsoft/TypeScript/issues/340\r\nexport interface Message extends IMessage {}\r\n\r\n/**\r\n * Rocket.Chat message class.\r\n * Sets integration param to allow tracing the source of automated sends.\r\n * @param content Accepts message text or a preformed message object.\r\n * @todo Potential for SDK usage that isn't bots; bot property should be optional?\r\n */\r\nexport class Message implements IMessage {\r\n  // The IMessage interface allows many fields to be optional.\r\n  // We explicitly define the ones we use here.\r\n  rid: string | null = null\r\n  msg?: string\r\n  // `bot` can be a boolean or an object, depending on the mode.\r\n  bot?: boolean | { i: string }\r\n\r\n  constructor (\r\n    content: string | IMessage,\r\n    integrationId: string,\r\n    opts: IMessageOpts = {}\r\n  ) {\r\n    if (typeof content === 'string') {\r\n      this.msg = content\r\n    } else {\r\n      // Copy all fields from the content object\r\n      Object.assign(this, content)\r\n    }\r\n\r\n    // If useLegacyBotFormat is true, set bot to { i: integrationId }\r\n    // Otherwise, set bot to true\r\n    if (opts.useLegacyBotFormat) {\r\n      this.bot = { i: integrationId }\r\n    } else {\r\n      this.bot = true\r\n    }\r\n  }\r\n\r\n  setRoomId (roomId: string): Message {\r\n    this.rid = roomId\r\n    return this\r\n  }\r\n}\r\n"]}